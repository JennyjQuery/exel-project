import {  CODES,  defaultRowCount,  defaultColCount} from '@/components/table/table.config';import {DEFAULT_WIDTH, DEFAULT_HEIGHT} from '@/components/table/table.config'import {toInlineStyles} from '@core/utils';import {defaultStyles} from '@/constants';import {parse} from '@core/parse';function getWidth(state, index) {  return (state[index] || DEFAULT_WIDTH) + 'px'}function getHeight(state, index) {  return (state[index] || DEFAULT_HEIGHT) + 'px'}function getText(state, index) {  return (state[index] || '')}function toCell(state, rowId) {  return function(_, colId) {    const width = getWidth(state.colState, colId);    const id = `${rowId}:${colId}`;    const styles = toInlineStyles({...defaultStyles, ...state.styleState[id]});    const data = getText(state.dataState, id);    return `     <div         class="cell"         data-col-id="${colId}"         data-id="${id}"        data-type="cell"        data-value="${data}"        contenteditable        style="${styles}; width: ${width}"        >${parse(data)}</div>    `  }}function toColumn({col, index, width}) {  return `     <div      class="column"      data-col-id="${index}"      data-type="resizable"      style="width: ${width}"     >      ${col}       <div class="col-resizer" data-resize="col" data-type="resizer">          <div class="handle-bar" data-type="resize-handler"></div>       </div>     </div>  `}function withWidthFrom(state) {  return function(col, index) {    return {      col, index, width: getWidth(state, index)    }  }}function toChar(_, index) {  return String.fromCharCode(CODES.A + index)}function createRow(content, index, state) {  const height = getHeight(state, index);  const cell = index ? `${index}     <div class="row-resizer" data-resize="row" data-type="resizer">        <div class="handle-bar" data-type="resize-handler"></div>      </div>` : '';  return `    <div     class="row"     data-row-id="${index}"     data-type="resizable"    style="height: ${height}"    >     <div class="row-info">     ${cell}     </div>       <div class="row-data">${content}</div>      </div>  `}export function createTable(rowsCount = defaultRowCount, state = {}) {  const rows = [];  const cols = new Array(defaultColCount)      .fill('')      .map(toChar)      .map(withWidthFrom(state.colState))      .map(toColumn)      .join('');  rows.push(createRow(cols, null, {}));  for (let row = 0; row< rowsCount; row++) {    const cells = new Array(defaultColCount)        .fill('')        .map(toCell(state, row))        .join('');    rows.push(createRow(cells, row + 1, state.rowState))  }  return rows.join('')}