import {  CODES,  defaultRowCount,  defaultColCount} from '@/components/table/table.config';// function toCell(el, index) {//   return `//      <div class="cell"//      data-col-id="${index}"//      data-type="cell"//      contenteditable>${el}</div>//     `// }function toCell(rowId) {  return function(_, colId) {    return `     <div         class="cell"         data-col-id="${colId}"         data-id="${rowId}:${colId}"        data-type="cell"        contenteditable>     </div>    `  }}function toColumn(el, index) {  return `     <div class="column" data-col-id="${index}" data-type="resizable">      ${el}       <div class="col-resizer" data-resize="col" data-type="resizer">          <div class="handle-bar" data-type="resize-handler"></div>       </div>     </div>  `}function toChar(_, index) {  return String.fromCharCode(CODES.A + index)}function createRow(content, index) {  const cell = index ? `${index}     <div class="row-resizer" data-resize="row" data-type="resizer">        <div class="handle-bar" data-type="resize-handler"></div>      </div>` : '';  return `    <div class="row" data-row-id="${index}" data-type="resizable">     <div class="row-info">     ${cell}     </div>       <div class="row-data">${content}</div>      </div>  `}export function createTable(rowsCount = defaultRowCount) {  const rows = [];  const cols = new Array(defaultColCount)      .fill('')      .map(toChar)      .map(toColumn)      .join('');  rows.push(createRow(cols));  for (let row = 0; row< rowsCount; row++) {    const cells = new Array(defaultColCount)        .fill('')        .map(toCell(row))        .join('');    rows.push(createRow(cells, row + 1))  }  return rows.join('')}